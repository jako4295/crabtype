use dict::{Dict, DictIface};

pub fn translator(key: &str) -> &str {
    let dict = _create_dict();
    match dict.get(key) {
        Some(value) => value,
        None => "Character not found",
    }
}

fn _create_dict() -> Dict<&'static str> {
    let mut dict: Dict<&str> = Dict::new();
    let entries = [
        (
            "A",
            "
 ▓▓▓▓▓▓  
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓▓▓▓▓▓▓ 
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓    ▓▓ 

",
        ),
        (
            "B",
            "
▓▓▓▓▓▓▓  
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓▓▓▓▓▓  
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓▓▓▓▓▓  

",
        ),
        (
            "C",
            "
 ▓▓▓▓▓▓  
▓▓    ▓▓ 
▓▓       
▓▓       
▓▓       
▓▓    ▓▓ 
 ▓▓▓▓▓▓  

",
        ),
        (
            "D",
            "
▓▓▓▓▓▓▓  
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓▓▓▓▓▓  

",
        ),
        (
            "E",
            "
▓▓▓▓▓▓▓▓ 
▓▓       
▓▓       
▓▓▓▓▓    
▓▓       
▓▓       
▓▓▓▓▓▓▓▓ 

",
        ),
        (
            "F",
            "
▓▓▓▓▓▓▓▓ 
▓▓       
▓▓       
▓▓▓▓▓    
▓▓       
▓▓       
▓▓       

",
        ),
        (
            "G",
            "
 ▓▓▓▓▓▓  
▓▓    ▓▓ 
▓▓       
▓▓  ▓▓▓▓ 
▓▓    ▓▓ 
▓▓    ▓▓ 
 ▓▓▓▓▓▓  

",
        ),
        (
            "H",
            "
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓▓▓▓▓▓▓ 
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓    ▓▓ 

",
        ),
        (
            "I",
            "
▓▓▓▓▓▓ 
  ▓▓   
  ▓▓   
  ▓▓   
  ▓▓   
  ▓▓   
▓▓▓▓▓▓ 

",
        ),
        (
            "J",
            "
   ▓▓▓▓▓ 
      ▓▓ 
      ▓▓ 
      ▓▓ 
▓▓    ▓▓ 
▓▓    ▓▓ 
 ▓▓▓▓▓▓  

",
        ),
        (
            "K",
            "
▓▓    ▓▓ 
▓▓   ▓▓  
▓▓  ▓▓   
▓▓▓▓▓    
▓▓  ▓▓   
▓▓   ▓▓  
▓▓    ▓▓ 

",
        ),
        (
            "L",
            "
▓▓        
▓▓        
▓▓        
▓▓        
▓▓        
▓▓        
▓▓▓▓▓▓▓▓  

",
        ),
        (
            "M",
            "
▓▓       ▓▓ 
▓▓▓     ▓▓▓ 
▓▓▓▓   ▓▓▓▓ 
▓▓ ▓▓ ▓▓ ▓▓ 
▓▓  ▓▓▓  ▓▓ 
▓▓   ▓   ▓▓ 
▓▓       ▓▓ 
            
",
        ),
        (
            "N",
            "
▓▓    ▓▓ 
▓▓▓   ▓▓ 
▓▓▓▓  ▓▓ 
▓▓ ▓▓ ▓▓ 
▓▓  ▓▓▓▓ 
▓▓   ▓▓▓ 
▓▓    ▓▓ 
         
",
        ),
        (
            "O",
            "
 ▓▓▓▓▓▓  
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓    ▓▓ 
 ▓▓▓▓▓▓  
         
",
        ),
        (
            "P",
            "
▓▓▓▓▓▓▓  
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓▓▓▓▓▓  
▓▓       
▓▓       
▓▓       
         
",
        ),
        (
            "Q",
            "
 ▓▓▓▓▓▓  
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓ ▓▓ ▓▓ 
 ▓▓▓▓▓▓  
      ▓▓▓
",
        ),
        (
            "R",
            "
▓▓▓▓▓▓▓  
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓▓▓▓▓▓  
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓    ▓▓ 

",
        ),
        (
            "S",
            "
 ▓▓▓▓▓▓  
▓▓    ▓▓ 
▓▓       
 ▓▓▓▓▓▓  
      ▓▓ 
▓▓    ▓▓ 
 ▓▓▓▓▓▓  

",
        ),
        (
            "T",
            "
▓▓▓▓▓▓▓▓ 
   ▓▓    
   ▓▓    
   ▓▓    
   ▓▓    
   ▓▓    
   ▓▓    

",
        ),
        (
            "U",
            "
▓▓    ▓▓ 
▓▓    ▓▓
▓▓    ▓▓
▓▓    ▓▓
▓▓    ▓▓
▓▓    ▓▓
 ▓▓▓▓▓▓ 

",
        ),
        (
            "V",
            "
▓▓     ▓▓ 
▓▓     ▓▓ 
▓▓     ▓▓ 
 ▓▓   ▓▓  
  ▓▓ ▓▓   
   ▓▓▓    
    ▓     

",
        ),
        (
            "W",
            "
▓▓       ▓▓ 
▓▓   ▓   ▓▓ 
▓▓  ▓▓▓  ▓▓ 
▓▓ ▓▓ ▓▓ ▓▓ 
▓▓▓▓   ▓▓▓▓ 
▓▓▓     ▓▓▓ 
▓▓       ▓▓ 

",
        ),
        (
            "X",
            "
▓▓    ▓▓ 
▓▓    ▓▓ 
 ▓▓  ▓▓  
  ▓▓▓▓   
 ▓▓  ▓▓  
▓▓    ▓▓ 
▓▓    ▓▓ 

",
        ),
        (
            "Y",
            "
▓▓      ▓▓ 
 ▓▓    ▓▓  
  ▓▓  ▓▓   
   ▓▓▓▓    
    ▓▓     
    ▓▓     
    ▓▓     

",
        ),
        (
            "Z",
            "
▓▓▓▓▓▓▓▓
     ▓▓ 
    ▓▓  
   ▓▓   
  ▓▓    
 ▓▓     
▓▓▓▓▓▓▓▓                                               

",
        ),
        (
            "a",
            "
        
        
 ▓▓▓▓▓▓ 
      ▓▓
 ▓▓▓▓▓▓▓
▓▓    ▓▓
 ▓▓▓▓▓▓▓

",
        ),
        (
            "b",
            "
▓▓      
▓▓      
▓▓▓▓▓▓▓ 
▓▓    ▓▓
▓▓    ▓▓
▓▓    ▓▓
▓▓▓▓▓▓▓ 

",
        ),
        (
            "c",
            "
        
        
 ▓▓▓▓▓▓▓
▓▓      
▓▓      
▓▓      
 ▓▓▓▓▓▓▓

",
        ),
        (
            "d",
            "
      ▓▓ 
      ▓▓ 
 ▓▓▓▓▓▓▓ 
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓    ▓▓ 
 ▓▓▓▓▓▓▓ 
         
",
        ),
        (
            "e",
            "


 ▓▓▓▓▓▓  
▓▓    ▓▓ 
▓▓▓▓▓▓▓▓ 
▓▓       
 ▓▓▓▓▓▓▓ 
         
",
        ),
        (
            "f",
            "
 ▓▓▓▓▓▓  
▓▓    ▓▓ 
▓▓       
▓▓▓▓     
▓▓       
▓▓       
▓▓       
         
",
        ),
        (
            "g",
            "
 ▓▓▓▓▓▓  
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓    ▓▓ 
 ▓▓▓▓▓▓▓ 
      ▓▓ 
▓▓    ▓▓ 
 ▓▓▓▓▓▓  
",
        ),
        (
            "h",
            "
▓▓       
▓▓       
▓▓▓▓▓▓▓  
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓    ▓▓ 
         
",
        ),
        (
            "i",
            "
▓▓ 
   
▓▓ 
▓▓ 
▓▓ 
▓▓ 
▓▓ 
   
",
        ),
        (
            "j",
            "
      ▓▓ 
         
      ▓▓ 
      ▓▓ 
      ▓▓ 
      ▓▓ 
▓▓    ▓▓ 
 ▓▓▓▓▓▓  
",
        ),
        (
            "k",
            "
▓▓       
▓▓       
▓▓    ▓▓ 
▓▓   ▓▓  
▓▓▓▓▓▓   
▓▓   ▓▓  
▓▓    ▓▓ 
         
",
        ),
        (
            "l",
            "
▓▓ 
▓▓ 
▓▓ 
▓▓ 
▓▓ 
▓▓ 
▓▓ 
   
",
        ),
        (
            "m",
            "
                     
                     
▓▓▓▓▓▓ ▓▓▓▓  
▓▓   ▓▓   ▓▓ 
▓▓   ▓▓   ▓▓ 
▓▓   ▓▓   ▓▓ 
▓▓   ▓▓   ▓▓ 
                     
",
        ),
        (
            "n",
            "


▓▓▓▓▓▓▓ 
▓▓    ▓▓
▓▓    ▓▓
▓▓    ▓▓
▓▓    ▓▓

",
        ),
        (
            "o",
            "
          
          
  ▓▓▓▓▓▓  
 ▓▓    ▓▓ 
 ▓▓    ▓▓ 
 ▓▓    ▓▓ 
  ▓▓▓▓▓▓  
          
",
        ),
        (
            "p",
            "
 ▓▓▓▓▓▓  
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓▓▓▓▓▓  
▓▓       
▓▓       
▓▓       
",
        ),
        (
            "q",
            "
 ▓▓▓▓▓▓  
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓    ▓▓ 
 ▓▓▓▓▓▓▓ 
      ▓▓ 
      ▓▓ 
      ▓▓ 
",
        ),
        (
            "r",
            "
         
         
 ▓▓▓▓▓▓  
▓▓    ▓▓ 
▓▓       
▓▓       
▓▓       
         
",
        ),
        (
            "s",
            "
         
         
 ▓▓▓▓▓▓▓ 
▓▓       
 ▓▓▓▓▓▓  
      ▓▓ 
▓▓▓▓▓▓▓  
         
",
        ),
        (
            "t",
            "
  ▓▓     
  ▓▓     
▓▓▓▓▓▓   
  ▓▓     
  ▓▓     
  ▓▓  ▓▓ 
   ▓▓▓▓  
         
",
        ),
        (
            "u",
            "
         
         
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓    ▓▓ 
 ▓▓▓▓▓▓  
         
",
        ),
        (
            "v",
            "
          
          
▓▓     ▓▓ 
 ▓▓   ▓▓  
  ▓▓ ▓▓   
   ▓▓▓    
    ▓     
          
",
        ),
        (
            "w",
            "
             
             
▓▓   ▓▓   ▓▓ 
▓▓   ▓▓   ▓▓ 
▓▓   ▓▓   ▓▓ 
▓▓   ▓▓   ▓▓ 
 ▓▓▓▓▓ ▓▓▓▓  
             
",
        ),
        (
            "x",
            "
         
         
▓▓    ▓▓ 
 ▓▓  ▓▓  
  ▓▓▓▓   
 ▓▓  ▓▓  
▓▓    ▓▓ 
         
",
        ),
        (
            "y",
            "
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓    ▓▓ 
 ▓▓▓▓▓▓▓ 
      ▓▓ 
▓▓    ▓▓ 
 ▓▓▓▓▓▓  
",
        ),
        (
            "z",
            "
           
         
▓▓▓▓▓▓▓▓
     ▓▓ 
  ▓▓▓▓  
 ▓▓     
▓▓▓▓▓▓▓▓
        
",
        ),
        (
            "1",
            "
    ▓▓   
  ▓▓▓▓   
    ▓▓   
    ▓▓   
    ▓▓   
    ▓▓   
  ▓▓▓▓▓▓ 
         
",
        ),
        (
            "2",
            "
 ▓▓▓▓▓▓  
▓▓    ▓▓ 
      ▓▓ 
 ▓▓▓▓▓▓  
▓▓       
▓▓       
▓▓▓▓▓▓▓▓ 
         
",
        ),
        (
            "3",
            "
 ▓▓▓▓▓▓  
▓▓    ▓▓ 
      ▓▓ 
  ▓▓▓▓▓  
      ▓▓ 
▓▓    ▓▓ 
 ▓▓▓▓▓▓  
         
",
        ),
        (
            "4",
            "
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓    ▓▓ 
▓▓▓▓▓▓▓▓ 
      ▓▓ 
      ▓▓ 
      ▓▓ 
         
",
        ),
        (
            "5",
            "
▓▓▓▓▓▓▓  
▓▓       
▓▓       
▓▓▓▓▓▓▓  
      ▓▓ 
▓▓    ▓▓ 
 ▓▓▓▓▓▓  
         
",
        ),
        (
            "6",
            "
 ▓▓▓▓▓▓  
▓▓    ▓▓ 
▓▓       
▓▓▓▓▓▓▓  
▓▓    ▓▓ 
▓▓    ▓▓ 
 ▓▓▓▓▓▓  
         
",
        ),
        (
            "7",
            "
▓▓▓▓▓▓▓▓ 
     ▓▓  
    ▓▓   
   ▓▓    
  ▓▓     
 ▓▓      
▓▓       
         
",
        ),
        (
            "8",
            "
 ▓▓▓▓▓▓  
▓▓    ▓▓ 
▓▓    ▓▓ 
 ▓▓▓▓▓▓  
▓▓    ▓▓ 
▓▓    ▓▓ 
 ▓▓▓▓▓▓  
         
",
        ),
        (
            "9",
            "
 ▓▓▓▓▓▓  
▓▓    ▓▓ 
▓▓    ▓▓ 
 ▓▓▓▓▓▓▓ 
      ▓▓ 
▓▓    ▓▓ 
 ▓▓▓▓▓▓  
         
",
        ),
        (
            "0",
            "
 ▓▓▓▓▓▓ 
▓▓▓   ▓▓
▓▓▓▓  ▓▓
▓▓ ▓▓ ▓▓
▓▓  ▓▓▓▓
▓▓   ▓▓▓
 ▓▓▓▓▓▓ 
        
",
        ),
    ];

    for (key, value) in entries.iter() {
        dict.add((*key).to_string(), *value);
    }

    dict
}
